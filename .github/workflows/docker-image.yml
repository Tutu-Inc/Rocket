name: Build and Publish Docker Image

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  #schedule:
  #  - cron: 0 0 * * *

jobs:
  build:
    if: "contains(github.event.head_commit.message, '[build package]')"
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Bump release version
        id: bump_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: '0.1.0-alpha0'
          version-fragment: 'alpha'

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/tutu-inc/rocket
          tags: |
            type=sha
            type=semver,pattern={{version}},value="v${{ steps.bump_version.outputs.next-version }}""
            type=raw,value=latest
          
          #tags: |
          #  type=schedule,pattern=nightly
          #  type=schedule,pattern={{date 'YYYYMMDD'}}
          #  type=ref,event=pr
          #  type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) || github.event_name == 'schedule' }}
            
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_PACKAGE_TOKEN }}

      - name: Build and publish image
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }} 
          
      #- name: Create Release
      #  if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      #  uses: actions/create-release@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      #  with:
      #    tag_name: ${{ steps.versioning.outputs.version }}
      #    release_name: ${{ steps.versioning.outputs.version }}
      #    prerelease: true